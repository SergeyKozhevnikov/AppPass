-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.concordants
(
    userid integer NOT NULL,
    passid integer NOT NULL,
    status boolean,
    comment text COLLATE pg_catalog."default",
    CONSTRAINT concordants_pkey PRIMARY KEY (userid, passid)
);

CREATE TABLE IF NOT EXISTS public.materials
(
    id serial NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    s_n character varying(20) COLLATE pg_catalog."default",
    ed character varying(10) COLLATE pg_catalog."default",
    quantity integer,
    passid integer,
    CONSTRAINT materials_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.passes
(
    id serial NOT NULL,
    date date,
    name character varying(50) COLLATE pg_catalog."default",
    docum character varying(64) COLLATE pg_catalog."default",
    birthday date,
    status character varying(20) COLLATE pg_catalog."default",
    car_num character varying(10) COLLATE pg_catalog."default",
    car_model character varying(20) COLLATE pg_catalog."default",
    car_color character varying(20) COLLATE pg_catalog."default",
    userid integer,
    passtypeid integer,
    CONSTRAINT passes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.passtypes
(
    id serial NOT NULL,
    name character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT passtypes_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.profiles
(
    id serial NOT NULL,
    surname character varying(30) COLLATE pg_catalog."default",
    name character varying(30) COLLATE pg_catalog."default",
    patronymic character varying(30) COLLATE pg_catalog."default",
    birthday timestamp with time zone,
    CONSTRAINT profiles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id serial NOT NULL,
    name character varying(20) COLLATE pg_catalog."default",
    permissions character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    login character varying(20) COLLATE pg_catalog."default",
    password character varying(64) COLLATE pg_catalog."default",
    email character varying(30) COLLATE pg_catalog."default",
    profileid integer,
    roleid integer,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_profileid_key UNIQUE (profileid)
);

ALTER TABLE IF EXISTS public.concordants
    ADD CONSTRAINT concordants_passid_fkey FOREIGN KEY (passid)
    REFERENCES public.passes (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.concordants
    ADD CONSTRAINT concordants_userid_fkey FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.materials
    ADD CONSTRAINT materials_passid_fkey FOREIGN KEY (passid)
    REFERENCES public.passes (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.passes
    ADD CONSTRAINT passes_passtypeid_fkey FOREIGN KEY (passtypeid)
    REFERENCES public.passtypes (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.passes
    ADD CONSTRAINT passes_userid_fkey FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_profileid_fkey FOREIGN KEY (profileid)
    REFERENCES public.profiles (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS users_profileid_key
    ON public.users(profileid);


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_roleid_fkey FOREIGN KEY (roleid)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.users_passtypes
    ADD CONSTRAINT users_passtypes_passtypeid_fkey FOREIGN KEY (passtypeid)
    REFERENCES public.passtypes (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.users_passtypes
    ADD CONSTRAINT users_passtypes_userid_fkey FOREIGN KEY (userid)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;

END;